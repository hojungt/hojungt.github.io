{"version":3,"sources":["pages/Tile/index.js","pages/Story/index.js","components/Footer/index.js","components/MainNavbar/index.js","pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["Tile","className","id","Card","style","width","Img","variant","src","Body","Title","Text","React","Component","Story","href","Footer","class","target","rel","MainNavbar","handleClick","event","props","onSelectPage","preventDefault","Navbar","sticky","expand","Nav","Link","onClick","this","Home","handlePageChange","setState","pageView","state","bind","renderSwitch","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94c72da2.chunk.js","sourcesContent":["// React\nimport React from \"react\";\n\n// Components\nimport Card from \"react-bootstrap/Card\";\n\nclass Tile extends React.Component {\n\n    render () {\n        return (\n            <div className=\"container\" id=\"container-tile\">\n                <div className=\"row\">\n                    <div className=\"col-lg-4\">\n                        <h1>Web Application</h1>\n                        <Card style={{ width: '18rem' }}>\n                            <Card.Img variant=\"top\" src=\"images/rachael_tseng_01.png\" />\n                            <Card.Body>\n                                <Card.Title>Card Title</Card.Title>\n                                <Card.Text>\n                                Some quick example text to build on the card title and make up the bulk of\n                                the card's content.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-10\">\n                        <h1>\n                            Architecture and Design\n                        </h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-10\">\n                        <h1>\n                            Other Projects\n                        </h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-10\">\n                        <h1>\n                            About\n                        </h1>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Tile;","// React\nimport React from \"react\";\n\nclass Story extends React.Component {\n\n    render () {\n        return (\n            <div className=\"container\" id=\"container-story\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-lg-10 col-sm-10\">\n                        <p className=\"story\">\n                            Hello, I am \n                            <a className=\"resume\" href=\"/\"> Rachael Tseng</a>, a Front-end Web Developer. \n                            <br />I believe good design can change lives. Practicing with my best, I am\n                            <a className=\"resume\" href=\"/\"> versatile</a>, open to \n                            <a className=\"project-arch\" href=\"/\"> radical ideas</a>, and always challenging myself to solve the \n                            <a className=\"project-code\" href=\"/\"> greater problems</a>.\n                        </p>\n                        <p className=\"story\">\n                            I have rich experience in\n                            <a className=\"project-arch\" href=\"/\"> architecture</a> and \n                            <a className=\"project-arch\" href=\"/\"> interior design</a>, and I have worked with professionals across many disciplinaries. \n                            I am now pursuing an expertise in \n                            <a className=\"project-arch\" href=\"/\"> Front-end Design</a> and \n                            <a className=\"resume\" href=\"/\"> User Experience</a>. Aside from work, I enjoy \n                            <a className=\"project-other\" href=\"/\"> drawing</a>, \n                            <a className=\"project-code\" href=\"/\"> gaming</a>, and \n                            <a className=\"project-other\" href=\"/\"> digital photography</a>.\n                        </p>\n                        <p className=\"story\">\n                            <a className=\"resume\" href=\"/\">Let's work together!</a>\n                        </p>\n                    </div>\n                </div>\n            </div>\n    \n        )\n    }\n};\n\nexport default Story;","// React\nimport React from 'react';\n\nclass Footer extends React.Component {\n    render () {\n        return (\n            <footer>\n                <div className=\"container\">\n                    <div className=\"row justify-content-center mb-2\">\n                        <a className=\"footer\" href=\"mailto:hojungt@gmail.com\"><i class=\"fab fa-telegram-plane\"></i></a>\n                        <a className=\"footer\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/hojungt\"><i class=\"fab fa-github\"></i></a>\n                        <a className=\"footer\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/rachael-ho-jung-tseng/\"><i class=\"fab fa-linkedin\"></i></a>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <h1 className=\"footer\">Rachael [ Ho-Jung ] Tseng Â© 2020</h1>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer; ","// React\nimport React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\n\nclass MainNavbar extends React.Component {\n\n    handleClick = (event) => {\n        this.props.onSelectPage(\"\");\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <Navbar sticky=\"top\" expand=\"lg\" className=\"justify-content-center\">\n                <Nav.Link\n                    onClick={this.handleClick}\n                    className=\"nav-icon\"\n                >\n                    <i class=\"fas fa-align-justify\"></i>\n                </Nav.Link>\n                <Nav.Link\n                    onClick={this.handleClick}\n                    className=\"nav-icon\"\n                >\n                    <i class=\"fas fa-th-large\"></i>\n                </Nav.Link>\n            </Navbar>\n        )   \n    }\n}\n\nexport default MainNavbar;","// React\nimport React from 'react';\n\n// Content\nimport Tile from '../Tile';\nimport Story from '../../pages/Story';\n\n// Components\nimport Footer from '../../components/Footer';\nimport MainNavbar from '../../components/MainNavbar';\n\n// Projects\n// import Groundcycle from '../../project/groundcycle';\n\nclass Home extends React.Component {\n   \n    constructor(props) {\n        \n        // initial state for content switch\n        super(props);\n        this.state = {\n            pageView: \"tile\",\n        };\n        // bind\n        this.handlePageChange = this.handlePageChange.bind(this);\n    }\n\n    handlePageChange = (event) => {\n        this.setState({\n            pageView: event,\n        })\n    }\n\n    renderSwitch() {\n        switch (this.state.pageView) {\n            case 'story':\n                return <Story />;\n            case 'tile':\n                return <Tile />;\n            default:\n                return <Story />;\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"container-page\">\n\n                <MainNavbar \n                    onSelectPage={this.handlePageChange}\n                />\n\n                {/* Page View */}\n                {this.renderSwitch()}\n                \n                <Footer />\n\n            </div>\n        );\n    }\n}\n\nexport default Home;","// React\nimport React from 'react';\n\n// Page\nimport Home from './pages/Home';\n\n// Stylesheets\nimport './App.css';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}